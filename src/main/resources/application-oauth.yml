spring:
  security:
    oauth2:
      client:
        registration:
#          naver:
#            clientId: [Client ID]
#            client-secret: [Secret Key]
#            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
#            authorization-grant-type: authorization_code
#            scope:
#              - email
#              - profile_image
#            client-name : Naver

          google:
            clientId: [ClientId]
            clientSecret: [ClientSecret]
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
#
#          facebook:
#            clientId:
#            clientSecret:
#            redirectUri:
#            scope:
#              - email
#              - public_profile
#
#          github:
#            clientId:
#            clientSecret:
#            redirectUri:
#            scope:
#              - user:email
#              - read:user

        provider:
#          naver:
#            authorization_uri: https://nid.naver.com/oauth2.0/authorize
#            token_uri: https://nid.facebook.com/oauth2.0/token
#            user_info_uri: https://openapi.naver.com/v1/nid/me
#            user_name_attribute: response

          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture,width(250),height(250)

app:
  auth:
    tokenSecret: [Secret Token]
    tokenExpirationMsec: 864000000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:8080/oauth2/redirect

logging.level:
  org.hibernate.SQL: debug
# org.hibernate.type: trace